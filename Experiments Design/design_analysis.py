"""
Created on #DATA
@author: Yida Yin
"""

import numpy as np
import itertools


def calc_var_diff_bet_pair(design_matrix):
    """
    return the variance/sigma^2 of difference of every two treatments given a known design matrix
    """
    # calculate X'X
    xx = np.dot(design_matrix.T, design_matrix)
    if np.linalg.matrix_rank(xx) < min(xx.shape):
        print "Matrix Not Invertible"
        return None
    xxi = np.linalg.inv(xx)
    # note that xxi is a square matrix
    n = xxi.shape[0]
    var = {}
    for pair in itertools.combinations(range(n), 2):
        # generate pairwise contrast
        contrast = [0 for i in range(n)]
        contrast[pair[0]], contrast[pair[1]] = 1, -1
        contrast = np.array(contrast)
        # calculate A'(X'X)^(-1)A
        v = reduce(np.dot, [contrast.T, xxi, contrast])
        v = round(v, 3)
        if v in var.keys():
            var[v].append(pair)
        else:
            var[v] = [pair]
    return var



a = np.array([[1,0,0,0,0,0,0,0,0,0,0,0,0,0,   0,1,0,0,0,0],
             [1,0,0,0,0,0,0,0,0,0,0,0,0,0,   0,0,1,0,0,0],
             [1,0,0,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,1],
             [1,0,0,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,0],

             [0,1,0,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,1,0,0],
             [0,1,0,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,1,0],
             [0,1,0,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,1],
             [0,1,0,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,0],

             [0,0,1,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,1,0,0],
             [0,0,1,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,1,0],
             [0,0,1,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,1],
             [0,0,1,0,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,0],

             [0,0,0,1,0,0,0,0,0,0,0,0,0,0,   1,0,0,0,0,0],
             [0,0,0,1,0,0,0,0,0,0,0,0,0,0,   0,0,1,0,0,0],
             [0,0,0,1,0,0,0,0,0,0,0,0,0,0,   0,0,0,1,0,0],
             [0,0,0,1,0,0,0,0,0,0,0,0,0,0,   0,0,0,0,1,0],

             [0,0,0,0,1,0,0,0,0,0,0,0,0,0,   1,0,0,0,0,0],
             [0,0,0,0,1,0,0,0,0,0,0,0,0,0,   0,0,1,0,0,0],
             [0,0,0,0,1,0,0,0,0,0,0,0,0,0,   0,0,0,1,0,0],
             [0,0,0,0,1,0,0,0,0,0,0,0,0,0,   0,0,0,0,0,0],

             [0,0,0,0,0,1,0,0,0,0,0,0,0,0,   1,0,0,0,0,0],
             [0,0,0,0,0,1,0,0,0,0,0,0,0,0,   0,0,1,0,0,0],
             [0,0,0,0,0,1,0,0,0,0,0,0,0,0,   0,0,0,0,0,1],
             [0,0,0,0,0,1,0,0,0,0,0,0,0,0,   0,0,0,0,0,0],

             [0,0,0,0,0,0,1,0,0,0,0,0,0,0,   1,0,0,0,0,0],
             [0,0,0,0,0,0,1,0,0,0,0,0,0,0,   0,0,1,0,0,0],
             [0,0,0,0,0,0,1,0,0,0,0,0,0,0,   0,0,0,0,1,0],
             [0,0,0,0,0,0,1,0,0,0,0,0,0,0,   0,0,0,0,0,1],

             [0,0,0,0,0,0,0,1,0,0,0,0,0,0,   0,1,0,0,0,0],
             [0,0,0,0,0,0,0,1,0,0,0,0,0,0,   0,0,1,0,0,0],
             [0,0,0,0,0,0,0,1,0,0,0,0,0,0,   0,0,0,0,1,0],
             [0,0,0,0,0,0,0,1,0,0,0,0,0,0,   0,0,0,0,0,1],

             [0,0,0,0,0,0,0,0,1,0,0,0,0,0,   0,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,1,0,0,0,0,0,   0,0,1,0,0,0],
             [0,0,0,0,0,0,0,0,1,0,0,0,0,0,   0,0,0,1,0,0],
             [0,0,0,0,0,0,0,0,1,0,0,0,0,0,   0,0,0,0,0,0],

             [0,0,0,0,0,0,0,0,0,1,0,0,0,0,   1,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,1,0,0,0,0,   0,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,1,0,0,0,0,   0,0,0,0,1,0],
             [0,0,0,0,0,0,0,0,0,1,0,0,0,0,   0,0,0,0,0,0],

             [0,0,0,0,0,0,0,0,0,0,1,0,0,0,   1,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,1,0,0,0,   0,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,1,0,0,0,   0,0,0,0,1,0],
             [0,0,0,0,0,0,0,0,0,0,1,0,0,0,   0,0,0,0,0,0],

             [0,0,0,0,0,0,0,0,0,0,0,1,0,0,   1,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,1,0,0,   0,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,1,0,0,   0,0,0,1,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,1,0,0,   0,0,0,0,0,1],

             [0,0,0,0,0,0,0,0,0,0,0,0,1,0,   1,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,1,0,   0,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,1,0,   0,0,0,1,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,1,0,   0,0,0,0,0,1],

             [0,0,0,0,0,0,0,0,0,0,0,0,0,1,   0,1,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,1,   0,0,1,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,1,   0,0,0,1,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,1,   0,0,0,0,1,0]])

vd = calc_var_diff_bet_pair(a)
for key in vd:
    print key, vd[key]